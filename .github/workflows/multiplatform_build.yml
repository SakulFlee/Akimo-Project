name: Multiplatform Build

on:
  workflow_dispatch:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  workspace:
    strategy:
      matrix:
        os: [ubuntu, windows, macos]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Restore
        uses: actions/cache/restore@v4
        with:
          key: cache
          path: |
            ~/.rustup
            ~/.cargo
            target/

      - name: Install Rust (*NIX)
        run: curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable --profile minimal -y
        if: ${{ !contains(matrix.os , 'windows') }}

      - name: Install Rust (Windows)
        run: |
          Invoke-WebRequest https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -OutFile rustup-init.exe
          ./rustup-init.exe --default-toolchain stable --profile minimal -y
        if: ${{ contains(matrix.os , 'windows') }}

      - name: Build Workspace
        run: cargo build --workspace --release --verbose

      - name: Test Workspace
        run: cargo test --workspace --verbose

      - name: Cache Save
        uses: actions/cache/save@v4
        if: always()
        with:
          key: cache
          path: |
            ~/.rustup
            ~/.cargo
            target/

      - name: Upload Engine Framework libraries
        uses: actions/upload-artifact@v4
        with:
          name: framework-libraries-${{ matrix.os }}
          path: target/release/lib*

      - name: Upload Engine App (*NIX)
        uses: actions/upload-artifact@v4
        if: ${{ !contains(matrix.os , 'windows') }}
        with:
          name: engine-app-${{ matrix.os }}
          path: target/release/engine_app

      - name: Upload Engine App (Windows)
        uses: actions/upload-artifact@v4
        if: ${{ contains(matrix.os , 'windows') }}
        with:
          name: engine-app-${{ matrix.os }}
          path: target/release/engine_app.exe

  publish:
    runs-on: ubuntu-latest
    needs: [workspace]
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Make artifacts directory
        run: mkdir artifacts

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Prepare artifact -> Linux
        run: mv engine-app-linux/engine_app "artifacts/Akimo-Project.Engine.Linux"

      - name: Prepare artifact -> Windows
        run: mv engine-app-windows/engine_app "artifacts/Akimo-Project.Engine.Windows"

      - name: Prepare artifact -> macOS
        run: mv engine-app-linux/engine_app "artifacts/Akimo-Project.Engine.macos"

      - name: Prepare artifact -> Framework
        run: find framework/ -type f -exec mv {} "artifacts/Akimo-Project.{}" \;

      - name: Make release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifacts/*"
          prerelease: ${{ contains(github.ref, 'pre') || contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
